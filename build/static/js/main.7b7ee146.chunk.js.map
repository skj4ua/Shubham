{"version":3,"sources":["component/BurgerIngredient/BurgerIngredient.module.css","component/Navigation/SideDrawer/SideDrawer.module.css","component/UI/Input/Input.module.css","component/Burger/BuildControls/BuildControl/BuildControl.module.css","component/Navigation/Toolbar/Toolbaar.module.css","component/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","component/Burger/BuildControls/BuildControls.module.css","component/UI/Button/Button.module.css","hoc/Layout/Layout.module.css","component/Logo/Logo.module.css","Assest/Image/burger-logo.png","component/Navigation/NavigationItems/NavigationItems.module.css","component/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","component/UI/Backdrop/Backdrop.module.css","component/Burger/Burger.module.css","component/UI/Modal/Modal.module.css","component/UI/Spinner/Spinner.module.css","component/Order/CheckoutSummary/CheckoutSummary.module.css","container/Checkout/ContactData/ContactData.module.css","component/Order/Order.module.css","container/Auth/Auth.module.css","hoc/Auxilliary/Auxilliary.js","component/Logo/Logo.js","component/Navigation/NavigationItems/NavigationItem/NavigationItem.js","component/Navigation/NavigationItems/NavigationItems.js","component/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","component/Navigation/Toolbar/Toolbar.js","component/UI/Backdrop/Backdrop.js","component/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","component/BurgerIngredient/BurgerIngredient.js","component/Burger/Burger.js","component/Burger/BuildControls/BuildControl/BuildControl.js","component/Burger/BuildControls/BuildControls.js","component/UI/Modal/Modal.js","component/UI/Button/Button.js","component/Burger/OrderSummary/OrderSummary.js","component/UI/Spinner/Spinner.js","hoc/WithErrorHandler/WithErrorHandler.js","axios-orders.js","store/action/Auth.js","store/action/actionTypes.js","container/BurgerBuilder/BurgerBuilder.js","store/action/burgerBuilder.js","store/action/order.js","component/Order/CheckoutSummary/CheckoutSummary.js","component/UI/Input/Input.js","container/Checkout/ContactData/ContactData.js","container/Checkout/Checkout.js","component/Order/Order.js","container/Orders/Orders.js","container/Auth/Auth.js","container/Auth/Logout/Logout.js","App.js","shared/utility.js","store/reducer/burgerBuilderReducer.js","store/reducer/orderReducer.js","store/reducer/Auth.js","index.js"],"names":["module","exports","Aux","props","children","Logo","className","classes","src","burgerLogo","alt","NavigationItem","to","link","exact","activeClassName","active","NavigationItems","isAuthenticated","DrawerToggle","onClick","clicked","Toolbar","drawerToggleClicked","DesktopOnly","isAuth","Backdrop","show","SideDrawer","attatchedClasses","Close","open","Open","closed","join","Layout","state","showDrawer","SideDrawerCloseHandler","setState","SideDrawerToggleHandler","prevState","this","Content","Component","connect","auth","token","BurgerIngredient","Ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Bacon","Salad","Burger","transformedIngredients1","Object","keys","ingredients","map","igKey","Array","_","i","key","reduce","arr","el","concat","length","BuildControl","Label","label","Less","removed","disabled","More","added","controls","BuildControls","price","toFixed","ctrl","ingredientsadd","ingredientsrem","OrderButton","purchase","ordered","Modal","nextProps","nextState","modalClosed","style","transform","opacity","display","Button","btntype","OrderSummary","Ordersummary","textTransform","totalPrice","PurcahseCancel","PurcahseContinue","Spinner","Loader","WithErrorHandler","WrappedComponent","axios","error","errorConfirmedhandler","interceptors","request","use","req","response","res","message","instance","create","baseURL","authSuccess","userId","idToken","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","setAuthRedirectPath","path","BurgerBuilder","purchasing","UpdatePurchasestate","sum","PurchaseHandler","onSetAuthRedirectPath","history","push","PurcahseCancelhandler","PurcahseContinuehandler","onInitpurchase","onInitingrsdients","Disabled","ings","orderSummary","burger","onAddingredient","onRemoveingredient","burgerBuilder","igname","ingredientname","get","then","data","catch","action","CheckoutSummary","width","margin","checkoutCanceledhandler","checkoutContinuehandler","Input","inputElem","InputElement","invalid","validation","touched","Invalid","validationError","color","elementtype","elementConfig","value","onChange","changed","options","option","displayvalue","ContactData","orderForm","name","placeholder","Required","valid","Area","Zipcode","minlength","maxlength","isNumeric","Country","email","isEmail","deliverymethod","formIsvalid","orderHandler","e","preventDefault","formData","formElementIdnetifier","order","orderData","onOrderBurger","checkValidation","rules","isValid","trim","test","Indentifier","updatedOrderForm","UpdatdedFormElement","target","identifier","console","log","formElementArray","id","Config","form","formElem","InputChangeHandler","loading","post","orderId","purchaseBurgerSuccess","purchaseBurgerFail","Checkout","goBack","match","url","summary","purchasedDirect","purchased","component","Order","ingredientsname","Name","Amount","ingredientoutput","ig","border","padding","Orders","onFetchOrders","orders","queryParams","fetchOrders","err","Auth","password","isSigup","event","controlName","updatedControls","submitHandler","switchAuthModeHandler","buildingBurger","authRedirectPath","errorMessage","authenticatedRedirect","onSubmit","building","isSignup","authData","returnSecureToken","tokenExpirationDate","Date","getTime","expiresIn","setItem","localId","authFail","Logout","onLogout","App","onTryAutoSignup","routes","withRouter","getItem","updateObject","oldObject","updatedProperties","intialstate","INGREDIENT_PRICES","salad","bacon","meat","cheese","addIngredient","updateIngredient","upadatedState","removeIngredient","updateIng","upadatedSt","setIngredient","fetchIngredient","reducer","initalstate","purchaseInit","purchaseBurgerStart","fetchBurgerStart","fetchBurgerSuccess","fetchBurgerFail","newOrder","initialState","authStart","authLogout","composeEnhancers","compose","rootReducer","combineReducers","burgerBuilderreducer","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7b7ee146.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__YDfv7\",\"BreadTop\":\"BurgerIngredient_BreadTop__9IKfk\",\"Seeds1\":\"BurgerIngredient_Seeds1__3HT5p\",\"Seeds2\":\"BurgerIngredient_Seeds2__hOB9j\",\"Meat\":\"BurgerIngredient_Meat__dEo-E\",\"Cheese\":\"BurgerIngredient_Cheese__2v_kw\",\"Salad\":\"BurgerIngredient_Salad__300vK\",\"Bacon\":\"BurgerIngredient_Bacon__1MyGE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__1Bi12\",\"Open\":\"SideDrawer_Open__1GpuE\",\"Close\":\"SideDrawer_Close__CZjby\",\"Logo\":\"SideDrawer_Logo__1whah\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__2gB7p\",\"Label\":\"Input_Label__1SQAZ\",\"InputElement\":\"Input_InputElement__F201W\",\"Invalid\":\"Input_Invalid__1Gp4E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__3y5W0\",\"Label\":\"BuildControl_Label__efAZ3\",\"Less\":\"BuildControl_Less__3PknH\",\"More\":\"BuildControl_More__uirkc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbaar_Toolbar__3WPl2\",\"Logo\":\"Toolbaar_Logo__1VxO9\",\"DesktopOnly\":\"Toolbaar_DesktopOnly__2bmj1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__16DwC\",\"active\":\"NavigationItem_active__2obEH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1GD-s\",\"OrderButton\":\"BuildControls_OrderButton__190gN\",\"enable\":\"BuildControls_enable__30VmC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1GwC2\",\"Success\":\"Button_Success__2HS1S\",\"Danger\":\"Button_Danger__2Hy-M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__3Tog8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__3SI1s\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__NkPxm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__i0pGs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__2tIfF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__3OYs_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__3k1Sc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__3LxS3\",\"load5\":\"Spinner_load5__1djpG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__1QBjB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__1YP-A\",\"Input\":\"ContactData_Input__1YKSs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__1gKYZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__pboXG\",\"Input\":\"Auth_Input__1i8Gc\"};","const Aux = (props) => props.children\r\n\r\nexport default Aux ;","import React from 'react'\r\nimport classes from './Logo.module.css'\r\nimport burgerLogo from '../../Assest/Image/burger-logo.png'\r\nconst Logo = (props) =>\r\n{\r\n    return(\r\n        <div className={classes.Logo}>\r\n            <img src={burgerLogo} alt=\"Burger-Logo\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Logo;","import React from 'react'\r\nimport classes from './NavigationItem.module.css'\r\nimport {NavLink} from 'react-router-dom'\r\nconst NavigationItem = (props) =>\r\n(\r\n\r\n    <li className={classes.NavigationItem}>\r\n        <NavLink\r\n         to={props.link}  exact={props.exact} activeClassName={classes.active}>\r\n        {props.children}\r\n        </NavLink>\r\n    </li>\r\n)\r\n    \r\n\r\n\r\nexport default NavigationItem;","import React from 'react'\r\nimport classes from './NavigationItems.module.css'\r\nimport NavigationItem  from './NavigationItem/NavigationItem'\r\nconst NavigationItems = (props) =>\r\n{\r\n    return(<ul className={classes.NavigationItems}>\r\n            <NavigationItem link=\"/\"  exact={true}>Burger Builder</NavigationItem>\r\n            {props.isAuthenticated ?\r\n            <NavigationItem link=\"/orders\">Orders</NavigationItem>:null}\r\n            {!props.isAuthenticated ? \r\n            <NavigationItem link=\"/Auth\" >Authentication</NavigationItem>:\r\n            <NavigationItem link=\"/Logout\" >Logout</NavigationItem>}\r\n    </ul>)\r\n}\r\n\r\nexport default NavigationItems;","import React from 'react'\r\nimport classes from './DrawerToggle.module.css'\r\n \r\nconst DrawerToggle = (props) =>\r\n{\r\n    return(\r\n        <div  className={classes.DrawerToggle} onClick={props.clicked}>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DrawerToggle;","import React from 'react'\r\nimport classes from './Toolbaar.module.css'\r\nimport Logo from '../../Logo/Logo'\r\nimport NavigationItems from '../NavigationItems/NavigationItems'\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle'\r\n\r\nconst Toolbar = (props) =>\r\n{\r\n    return(\r\n        <header className={classes.Toolbar}>\r\n            <DrawerToggle clicked={props.drawerToggleClicked}/>\r\n            <div className={classes.Logo}>\r\n            <Logo/>\r\n            </div>\r\n            <nav className={classes.DesktopOnly}>\r\n                <NavigationItems isAuthenticated={props.isAuth}/>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Toolbar","import React from 'react'\r\nimport classes from './Backdrop.module.css'\r\nconst Backdrop = (props) =>\r\n{\r\n    // console.log(props.show)\r\n    return(\r\n       props.show? <div className={classes.Backdrop} onClick={props.clicked}></div>:null\r\n\r\n        \r\n    )\r\n}\r\n\r\nexport default Backdrop","import React from 'react';\r\nimport NavigationItems from '../NavigationItems/NavigationItems'\r\nimport Logo from '../../Logo/Logo'\r\nimport Aux from '../../../hoc/Auxilliary/Auxilliary'\r\nimport Backdrop from '../../UI/Backdrop/Backdrop'\r\nimport classes from './SideDrawer.module.css'\r\n \r\n\r\nconst SideDrawer = (props) =>\r\n{\r\n    let attatchedClasses = [classes.SideDrawer,classes.Close]\r\n    if(props.open)\r\n    {\r\n        attatchedClasses = [classes.SideDrawer,classes.Open]\r\n    }\r\n\r\n    return (\r\n        <Aux>\r\n            <Backdrop show={props.open} clicked={props.closed}/>\r\n        <div className={attatchedClasses.join(' ')} onClick={props.closed}>\r\n            <div className={classes.Logo}>\r\n            <Logo/>\r\n            </div>\r\n            <nav>\r\n                < NavigationItems isAuthenticated={props.isAuth}/>\r\n\r\n            </nav>\r\n        </div>\r\n        </Aux>\r\n\r\n    )\r\n}\r\n\r\nexport default SideDrawer;","import React,{Component} from 'react'\r\nimport Aux from '../Auxilliary/Auxilliary'\r\nimport classes from './Layout.module.css'\r\nimport Toolbar from '../../component/Navigation/Toolbar/Toolbar'\r\nimport SideDrawer from '../../component/Navigation/SideDrawer/SideDrawer'\r\nimport {connect} from 'react-redux'\r\n\r\n\r\nclass Layout extends Component{\r\n    state = {\r\n        showDrawer :false\r\n    }\r\n\r\n    SideDrawerCloseHandler = () =>\r\n    {\r\n        this.setState({showDrawer:false})\r\n    }\r\n\r\n    SideDrawerToggleHandler = () =>\r\n    {\r\n        this.setState((prevState) =>{\r\n\r\n            return{showDrawer:!prevState.showDrawer}\r\n        })\r\n    }\r\n    render()\r\n    { return(<Aux>\r\n        {/* <div>Toolbar, SideDrawer and Backdrop </div> */}\r\n         \r\n        <Toolbar \r\n        isAuth={this.props.isAuth}\r\n        drawerToggleClicked={this.SideDrawerToggleHandler}/>\r\n         \r\n         \r\n        <SideDrawer \r\n        isAuth={this.props.isAuth}\r\n        open={this.state.showDrawer} closed={this.SideDrawerCloseHandler}/>\r\n        \r\n        <main className={classes.Content}>\r\n         \r\n            {this.props.children}\r\n        </main>\r\n        </Aux>)\r\n    \r\n\r\n}\r\n\r\n\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n    return {\r\n        isAuth: state.auth.token != null\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Layout);","import React,{Component} from 'react'\r\nimport classes from './BurgerIngredient.module.css'\r\nimport PropTypes from 'prop-types';\r\n\r\nclass BurgerIngredient extends Component\r\n{\r\n    render()\r\n{\r\n    let Ingredient = null;\r\n    switch(this.props.type)\r\n    {\r\n        case('bread-bottom'):\r\n        Ingredient = <div className={classes.BreadBottom}></div>\r\n        break;\r\n\r\n        case('bread-top'):\r\n        Ingredient = (\r\n            <div className={classes.BreadTop}>\r\n            <div className={classes.Seeds1}></div>\r\n            <div className={classes.Seeds2}></div>\r\n            </div>\r\n        );\r\n        break;\r\n\r\n        case('meat'):\r\n        Ingredient = <div className={classes.Meat}></div>\r\n        break;\r\n\r\n        case('cheese'):\r\n        Ingredient = <div className={classes.Cheese}></div>\r\n        break;\r\n\r\n        case('bacon'):\r\n        Ingredient = <div className={classes.Bacon}></div>\r\n        break;\r\n\r\n        case('salad'):\r\n        Ingredient = <div className={classes.Salad}></div>\r\n        break;\r\n\r\n        default:\r\n        Ingredient=null\r\n        break;\r\n\r\n    }\r\n\r\n    return Ingredient;\r\n}\r\n\r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n    type:PropTypes.string.isRequired\r\n}\r\n\r\n\r\nexport default BurgerIngredient;","import React from 'react'\r\nimport classes from './Burger.module.css'\r\nimport BurgerIngredient from '../BurgerIngredient/BurgerIngredient'\r\nconst Burger = (props) => {\r\n    // console.log(props.ingredients)\r\n    const transformedIngredients = Object.keys(props.ingredients)\r\n    // console.log(transformedIngredients)\r\n    let transformedIngredients1 =  transformedIngredients.map(igKey =>{\r\n            // console.log(igKey)\r\n         return [...Array(props.ingredients[igKey])].map((_,i) =>\r\n         {\r\n            //  console.log(igKey)\r\n             let x =  <BurgerIngredient key={igKey + i} type={igKey}/>\r\n            //  console.log(x)\r\n             return(x)\r\n         })\r\n       \r\n        // let x = [...Array(props.ingredients[igKey])]\r\n\r\n        // console.log(x)\r\n        // // let y =  [x]\r\n        // // console.log(y)\r\n        // return x\r\n\r\n    })\r\n    .reduce((arr,el) =>{\r\n       return  arr.concat(el)\r\n    },[]);\r\n    // console.log(transformedIngredients1)\r\n    if(transformedIngredients1.length === 0) {\r\n        transformedIngredients1 = <p> Please start adding the ingredients </p>\r\n    }\r\n    \r\n\r\n    return ( \r\n        <div className={classes.Burger}>\r\n            <BurgerIngredient type='bread-top'/>                \r\n            {transformedIngredients1}\r\n            {/* <BurgerIngredient type='bacon'/>\r\n            <BurgerIngredient type='salad'/> */}\r\n            <BurgerIngredient type='bread-bottom'/>  \r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default Burger;","import React from 'react'\r\nimport classes from './BuildControl.module.css'\r\n\r\nconst BuildControl =  (props) => (\r\n     <div className={classes.BuildControl}>\r\n         <div className={classes.Label}>{props.label}</div>\r\n         <button className={classes.Less} onClick={props.removed} disabled={props.disabled}>Less</button>\r\n         <button className={classes.More} onClick={props.added}>More</button>\r\n     </div>\r\n )\r\n\r\n export default BuildControl;\r\n","import React from 'react'\r\nimport BuildControl from './BuildControl/BuildControl';\r\nimport classes from './BuildControls.module.css'\r\n\r\n\r\nconst controls = [\r\n    {label:'Salad' ,    type:'salad'},\r\n    {label:'Cheese' ,   type:'cheese'},\r\n    {label:'Meat' ,     type:'meat'},\r\n    {label:'Bacon' ,    type:'bacon'}\r\n];\r\n\r\nconst BuildControls =  (props) => (\r\n     <div className={classes.BuildControls}>\r\n         Total Price :- <strong>{props.price.toFixed(2)}</strong>\r\n         {controls.map((ctrl) =>{\r\n             return (<BuildControl \r\n                key={ctrl.label} \r\n                label={ctrl.label}\r\n                added={() => props.ingredientsadd(ctrl.type)}\r\n                removed={() => props.ingredientsrem(ctrl.type)}\r\n                disabled={props.disabled[ctrl.type]}\r\n                \r\n                />)\r\n         })}\r\n         <button \r\n         className={classes.OrderButton} \r\n         disabled={!props.purchase} \r\n         onClick={props.ordered}>\r\n             {props.isAuth ? 'ORDER NOW' : 'SIGN IN'}\r\n        </button>\r\n     </div>\r\n )\r\n\r\n export default BuildControls;\r\n\r\n \r\n","import React,{Component} from 'react'\r\nimport classes from './Modal.module.css'\r\nimport Aux from '../../../hoc/Auxilliary/Auxilliary'\r\nimport Backdrop from '../Backdrop/Backdrop'\r\nclass Modal extends Component \r\n{ \r\n\r\n    shouldComponentUpdate(nextProps,nextState){\r\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\r\n    }\r\n\r\n    componentDidUpdate()\r\n    {\r\n        // console.log('[Modal] Component')\r\n    }\r\n    render()\r\n    {\r\n    return(\r\n        <Aux>\r\n            <Backdrop show={this.props.show}  clicked={this.props.modalClosed}/>\r\n\r\n        <div className={classes.Modal} \r\n        style={{\r\n            transform:this.props.show ? 'translateY(0)':'translate(-100vh)',\r\n            opacity:this.props.show ? '1':'0',\r\n            display:this.props.show ? 'block':'none'\r\n        \r\n        }}>\r\n\r\n            \r\n\r\n            {this.props.children}\r\n        </div>\r\n        </Aux>\r\n\r\n    )\r\n}\r\n}\r\n\r\nexport default Modal;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport classes from './Button.module.css'\r\n\r\nconst Button = (props) =>\r\n{\r\n    //  console.log(props.btntype)\r\n    return(<button  disabled={props.disabled} className={[classes.Button,classes[props.btntype]].join(' ')} \r\n    onClick={props.clicked} >{props.children}</button>)\r\n\r\n   \r\n} \r\n\r\nexport default Button","import React ,{Component} from 'react'\r\nimport Aux from '../../../hoc/Auxilliary/Auxilliary'\r\nimport Button from '../../UI/Button/Button'\r\n\r\nclass OrderSummary extends Component\r\n{\r\n    // This could be a functional component,doesn't have to be class component \r\n    componentDidUpdate()\r\n    {\r\n        // console.log('[Order Summary] Component')\r\n    }\r\n\r\n    render()\r\n    {\r\n    const Ordersummary = Object.keys(this.props.ingredients)\r\n    .map((igKey) => {\r\n        return(\r\n        <li key={igKey}>\r\n            <span style={{textTransform:'capitalize'}}>{igKey}</span>: {this.props.ingredients[igKey]}\r\n            </li>\r\n        )\r\n\r\n    })\r\n\r\n    return(\r\n        <Aux>\r\n            <h3> Your  Order</h3>\r\n            <p>Your Burger has following ingredients</p>\r\n            <ul>\r\n            {Ordersummary}\r\n            <p><strong>Total Price :{this.props.totalPrice.toFixed(2)}</strong></p>\r\n            <p> Continue to Checkout </p>\r\n            \r\n            </ul>\r\n            {/* <Button btntype=\"Danger\" onClick={props.PurcahseCancel}>CANCEl</Button>\r\n            <Button btntype=\"Success\" onClick={props.PurcahseContinue}>CONTINUE</Button> */}\r\n            <Button btntype=\"Danger\" clicked={this.props.PurcahseCancel}>CANCEL</Button>\r\n            <Button btntype=\"Success\" clicked={this.props.PurcahseContinue}>CONTINUE</Button>\r\n        </Aux>\r\n    )\r\n}\r\n}\r\n\r\nexport default OrderSummary\r\n","import React from 'react'\r\nimport classes from './Spinner.module.css'\r\nconst Spinner = (props) =>\r\n{\r\n    return(\r\n        <div className={classes.Loader}>Loading...</div>\r\n    )\r\n}\r\n\r\nexport default Spinner; ","import React, { Component } from 'react'\r\nimport Modal from '../../component/UI/Modal/Modal'\r\nimport Aux from '../Auxilliary/Auxilliary'\r\n\r\n\r\nconst WithErrorHandler = (WrappedComponent,axios) =>{\r\n    return class extends Component{\r\n        state = {\r\n            error:null\r\n        }\r\n        // can be done with the use o constructor or componentWillMounted \r\n        // as it executed as the object is created and then it called the constructor\r\n\r\n\r\n        componentWillMount(){\r\n            axios.interceptors.request.use(req =>{\r\n                this.setState({error:null})\r\n                return req\r\n            })\r\n            axios.interceptors.response.use(res => res,error =>{\r\n                this.setState({error:error})\r\n            })\r\n        }\r\n\r\n        errorConfirmedhandler  = () =>{\r\n            this.setState({error:null})\r\n        }\r\n         render()\r\n         {\r\n             \r\n             return(\r\n                <Aux>\r\n                <Modal show={this.state.error} modalClosed={this.errorConfirmedhandler}>\r\n                    {this.state.error ?this.state.error.message:null}\r\n                </Modal>\r\n            <WrappedComponent {...this.props}/>\r\n\r\n            </Aux>\r\n             )\r\n         }\r\n    \r\n}\r\n}\r\n\r\n\r\nexport default WithErrorHandler","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL:'https://react-myapp-burger-9ed67.firebaseio.com/'\r\n})\r\n\r\nexport default instance;","import * as actionType from './actionTypes'\r\nimport axios from 'axios'\r\n\r\nexport const authStart = () =>{\r\n    return {\r\n        type:actionType.AUTH_START\r\n    }\r\n}\r\n\r\nexport const authSuccess = (token,userId) =>{\r\n    return{\r\n        type:actionType.AUTH_SUCCESS,\r\n        idToken:token,\r\n        userId:userId\r\n    }\r\n}\r\n\r\nexport const authFail = (err) =>{\r\n    return{\r\n        type:actionType.AUTH_FAIL,\r\n        error:err\r\n\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('Token')\r\n    localStorage.removeItem('tokenExpirationDate')\r\n    localStorage.removeItem('userId')\r\n    return{\r\n        type:actionType.AUTH_LOGOUT\r\n    }\r\n}\r\nexport const checkAuthTimeout = (expirationTime) =>{\r\n    return dispatch =>{\r\n        setTimeout(() => {\r\n            dispatch(logout())\r\n        }, expirationTime * 1000);\r\n    }\r\n}\r\n\r\nexport const auth = (email,password,isSignup) => {\r\n    return dispatch => {\r\n        dispatch(authStart())\r\n        const authData ={\r\n            email:email,\r\n            password:password,\r\n            returnSecureToken:true  \r\n        }\r\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyA3h0kxY0lKXWSnXtuazKZOiINFAywe4bE'\r\n        if(!isSignup)\r\n        {\r\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyA3h0kxY0lKXWSnXtuazKZOiINFAywe4bE'\r\n        }\r\n        axios.post(url,authData)\r\n        .then((response) =>{\r\n            console.log(response)\r\n            const tokenExpirationDate =  new Date(new Date().getTime() + response.data.expiresIn * 1000)\r\n            localStorage.setItem('Token',response.data.idToken)\r\n            localStorage.setItem('tokenExpirationDate',tokenExpirationDate)\r\n            localStorage.setItem('userId',response.data.localId)\r\n\r\n            dispatch(authSuccess(response.data.idToken,response.data.localId))\r\n            dispatch(checkAuthTimeout(response.data.expiresIn))\r\n        })\r\n        .catch((err) =>{\r\n            console.log(err)\r\n            console.log(err.response)\r\n            dispatch(authFail(err.response.data.error))\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport const setAuthRedirectPath = (path) =>\r\n{\r\n    return{\r\n        type:actionType.SET_AUTH_REDIRECT_PATH,\r\n        path:path\r\n    }\r\n}\r\n\r\n\r\nexport const authCheckState = () =>{\r\n    return dispatch =>{\r\n        const token = localStorage.getItem('Token')\r\n        if(!token)\r\n        {\r\n            dispatch(logout())\r\n        }\r\n        else{\r\n            const tokenExpirationDate = new Date(localStorage.getItem('tokenExpirationDate'))\r\n            if(tokenExpirationDate <= new Date())\r\n            {\r\n                dispatch(logout())\r\n            }else {\r\n                const userId = localStorage.getItem('userId')\r\n                dispatch(authSuccess(token,userId))\r\n                dispatch(checkAuthTimeout((tokenExpirationDate.getTime() - new Date().getTime()) /1000))\r\n            }\r\n        }\r\n    }\r\n}","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\r\nexport const SET_INGREDIENT = 'SET_INGREDIENT';\r\nexport const FETCH_INGRDIENTS_FAILED = 'FETCH_INGRDIENTS_FAILED'\r\n\r\nexport const PURCHASE_BURGER_START  = 'PURCHASE_BURGER_START'; // used to show spinner \r\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\r\nexport const PURCHASE_BURGER_FAIL    = 'PURCHASE_BURGER_FAIL';\r\n\r\nexport const PURCHASE_INIT = 'PURCHASE_INIT';  // used for redirecting the page once order is placed\r\n\r\n\r\n\r\nexport const FETCH_BURGER_START = 'FETCH_BURGER_START';\r\nexport const FETCH_BURGER_SUCCESS = 'FETCH_BURGER_SUCCESS';\r\nexport const FETCH_BURGER_FAIL ='FETCH_BURGER_FAIL'\r\n\r\n\r\nexport const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL ='AUTH_FAIL'\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT'\r\n\r\n\r\n\r\nexport const SET_AUTH_REDIRECT_PATH ='SET_AUTH_REDIRECT_PATH' // is used to for either redirecting to '/' or '/checkout\r\n","import React, { Component } from 'react'\r\nimport Aux from '../../hoc/Auxilliary/Auxilliary'\r\nimport Burger from '../../component/Burger/Burger'\r\nimport BuildControls from '../../component/Burger/BuildControls/BuildControls'\r\nimport Modal from '../../component/UI/Modal/Modal'\r\nimport OrderSummary from '../../component/Burger/OrderSummary/OrderSummary'\r\nimport Spinner from '../../component/UI/Spinner/Spinner'\r\nimport WithErrorHandler from '../../hoc/WithErrorHandler/WithErrorHandler'\r\nimport axios from '../../axios-orders'\r\nimport {connect} from 'react-redux'\r\n// import * as actionType from '../../store/action/actionTypes'\r\n// import reducer from '../../store/reducer/burger'\r\nimport * as action  from '../../store/action/index'\r\n// import { Redirect } from 'react-router'\r\n\r\n\r\n\r\n export class BurgerBuilder extends Component {\r\n     state = {\r\n        //  ingredients: {\r\n        //      salad:0,\r\n        //      bacon:0,\r\n        //      cheese:0,\r\n        //      meat:0\r\n        //  },\r\n        //  ingredients:null,\r\n        //  totalPrice:50,\r\n        //  purchaseable:false,  // indicates order now button is enable or disable\r\n         purchasing:false    // indicates the Modal should appears or not\r\n        //  loading:false,     //click on continue button then sometime it loads\r\n        //  error:false       //error message should be show when the get request failed\r\n     }\r\n\r\n     componentDidMount(){\r\n\r\n        this.props.onInitingrsdients()\r\n        //  axios.get('https://react-myapp-burger-9ed67.firebaseio.com/ingredients.json')\r\n        //  .then(response => {\r\n        //         this.setState({ingredients:response.data})\r\n        //  })\r\n        //  .catch(error =>{\r\n        //     this.setState({error:true})\r\n        //  })\r\n\r\n        }\r\n     UpdatePurchasestate = (ingredients) =>{\r\n        //  let ingredients = {             as we have not received the updated state \r\n        //      ...this.state.ingredientsn  value from below Add... and remove... methods\r\n        //  }\r\n         let sum = Object.keys(ingredients)\r\n         .map((igKey) => {\r\n             return ingredients[igKey]\r\n         })\r\n         .reduce((sum,el)=>{\r\n            return sum + el\r\n         },0)\r\n\r\n         return sum > 0 \r\n     }\r\n    //  AddIngrendientHandler = (type) =>\r\n\r\n    //  {\r\n    //         const Oldcount = this.state.ingredients[type]\r\n    //         const UpdatedCount = Oldcount + 1\r\n    //         const UpdatedIngredients =  {\r\n    //             ...this.state.ingredients\r\n    //         }\r\n    //         UpdatedIngredients[type] = UpdatedCount\r\n    //         const OldPrice = this.state.totalPrice\r\n    //         const UpdatedPrice = OldPrice + INGREDIENT_PRICES[type]\r\n            \r\n    //         this.setState({ingredients:UpdatedIngredients, totalPrice:UpdatedPrice})\r\n    //         this.UpdatePurchasestate(UpdatedIngredients)\r\n    //  }\r\n\r\n    //  RemoveIngrendientHandler = (type) =>\r\n\r\n    //  {\r\n    //         const Oldcount = this.state.ingredients[type]\r\n    //         if(Oldcount <= 0)\r\n    //         {\r\n    //             return \r\n    //         }\r\n    //         const UpdatedCount = Oldcount - 1\r\n    //         const UpdatedIngredients =  {\r\n    //             ...this.state.ingredients\r\n    //         }\r\n    //         UpdatedIngredients[type] = UpdatedCount\r\n    //         const OldPrice = this.state.totalPrice\r\n    //         const UpdatedPrice = OldPrice - INGREDIENT_PRICES[type]\r\n            \r\n    //         this.setState({ingredients:UpdatedIngredients, totalPrice:UpdatedPrice})\r\n    //         this.UpdatePurchasestate(UpdatedIngredients)\r\n    //  }\r\n    \r\n     PurchaseHandler = () =>\r\n     {\r\n         if(this.props.auth) \r\n         {\r\n             this.setState({purchasing:true})\r\n\r\n         }\r\n         else {\r\n            //  <Redirect to='/auth'/>\r\n            this.props.onSetAuthRedirectPath('./checkout')\r\n            this.props.history.push('/auth')\r\n         }\r\n     }\r\n\r\n     PurcahseCancelhandler = () =>\r\n     {\r\n         this.setState({purchasing:false})\r\n     }\r\n\r\n     PurcahseContinuehandler = () =>\r\n     {\r\n        this.props.onInitpurchase()\r\n        this.props.history.push('/checkout')\r\n        //  const queryParams = []\r\n        //  for(let i in this.state.ingredients){\r\n        //      queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.state.ingredients[i]))\r\n        //     // queryParams.push(i + '=' + this.state.ingredients[i])\r\n        // }\r\n        //     queryParams.push(\"price=\" + this.state.totalPrice)\r\n        //     // console.log(queryParams)\r\n        //  const queryString = queryParams.join('&')\r\n        // //  console.log(queryString)\r\n        //  this.props.history.push({\r\n        //      pathname:'/checkout',\r\n        //      search:'?' + queryString\r\n\r\n        //  })\r\n        //----------------------------------------------------\r\n        //  this.props.history.push('/checkout')\r\n        //  this.setState({loading:true})\r\n        // const order = {\r\n        //     ingredients: this.state.ingredients,\r\n        //     price:this.state.totalPrice,\r\n        //     customer:{\r\n        //         name:'Shubham Tompe',\r\n        //         Address:{\r\n        //             Area:\"Plot no 16, Saibaba Nagar\",\r\n        //             Zipcode:\"440002\",\r\n        //             Country:\"India\"\r\n        //         },\r\n        //         email:\"abc@test.com\"\r\n        //     },\r\n        //     deliverymethod:'Super-fast'\r\n\r\n        //     }\r\n        \r\n\r\n        //  axios.post('/orders.json',order)\r\n        //  .then(response =>{\r\n        //      this.setState({loading:false,purchasing:false})\r\n        //     //  console.log(response)\r\n        //  })\r\n        //  .catch(error =>{\r\n        //     this.setState({loading:false,purchasing:false})\r\n        //     //  console.log(error)\r\n        //  })\r\n\r\n\r\n        //alert('You can Continue now!!!')    \r\n    }\r\n\r\n    \r\n    render() {\r\n        \r\n        const Disabled = {\r\n            ...this.props.ings\r\n        }\r\n\r\n        for (let key in Disabled)\r\n        {\r\n            Disabled[key] =  Disabled[key] <=0\r\n        }\r\n\r\n         let orderSummary = null        \r\n         let burger = this.props.error  ? <p>Ingredients cannot be loaded</p> :<Spinner />\r\n         \r\n         if(this.props.ings)\r\n         {\r\n             \r\n             burger = (\r\n            <Aux>\r\n                <Burger  ingredients={this.props.ings}/>  \r\n                    <BuildControls \r\n                    ingredientsadd =  {this.props.onAddingredient}\r\n                    ingredientsrem = {this.props.onRemoveingredient}\r\n                    disabled={Disabled}\r\n                    price={this.props.price}\r\n                    // purchase={this.state.purchaseable}\r\n                    purchase={this.UpdatePurchasestate(this.props.ings)}\r\n                    ordered={this.PurchaseHandler}\r\n                    isAuth={this.props.auth}\r\n                    \r\n                    />\r\n            </Aux>\r\n        )\r\n        orderSummary = <OrderSummary ingredients={this.props.ings}\r\n        PurcahseCancel={this.PurcahseCancelhandler} \r\n        PurcahseContinue={this.PurcahseContinuehandler}\r\n        totalPrice={this.props.price}/>\r\n      \r\n\r\n         }\r\n\r\n         \r\n    //     if(this.state.loading)\r\n    //   {\r\n    //       orderSummary = <Spinner/>\r\n    //   }\r\n    \r\n        return (\r\n            <Aux>\r\n                  <Modal \r\n                  show={this.state.purchasing}\r\n                  modalClosed={this.PurcahseCancelhandler}\r\n                  >\r\n                  {orderSummary}\r\n                  </Modal>\r\n                  {burger}\r\n            </Aux>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStatetoProps = (state) =>{\r\n    return{\r\n        ings:state.burgerBuilder.ingredients,\r\n        price:state.burgerBuilder.totalPrice,\r\n        error:state.burgerBuilder.error,\r\n        auth:state.auth.token != null\r\n    }\r\n}\r\n\r\nconst mapDispatchtoProps = (dispatch) =>\r\n{\r\n    return {\r\n    //     onAddingredient:(igname) => dispatch({type:actionType.ADD_INGREDIENT,ingredientname:igname}),\r\n    //    onRemoveingredient:(igname) => dispatch({type:actionType.REMOVE_INGREDIENT,ingredientname:igname})\r\n    onAddingredient:(igname) => dispatch(action.addIngredient(igname)),\r\n    onRemoveingredient:(igname) => dispatch(action.removeIngredient(igname)),\r\n    onInitingrsdients: () => dispatch(action.initIngredients()),\r\n    onInitpurchase : () => dispatch(action.purchaseInit()),\r\n    onSetAuthRedirectPath: (path) =>dispatch(action.setAuthRedirectPath(path))\r\n}\r\n}\r\nexport default connect(mapStatetoProps,mapDispatchtoProps)(WithErrorHandler(BurgerBuilder,axios));\r\n\r\n\r\n ","import * as actionTypes from './actionTypes'\r\nimport axios from '../../axios-orders'\r\n\r\nexport const addIngredient = (name) =>\r\n{\r\n    return{\r\n        type:actionTypes.ADD_INGREDIENT,\r\n        ingredientname:name\r\n    }\r\n}\r\n\r\nexport const removeIngredient = (name) =>\r\n{\r\n    return{\r\n        type:actionTypes.REMOVE_INGREDIENT,\r\n        ingredientname:name\r\n    }\r\n}\r\n\r\nconst setIngredients = (ingredients) =>\r\n{\r\n    return{\r\n        type:actionTypes.SET_INGREDIENT,\r\n        ingredients:ingredients\r\n        \r\n    }\r\n}\r\n\r\nconst fetchIngredientsfailed =() =>\r\n{\r\n    return{\r\n        type:actionTypes.FETCH_INGRDIENTS_FAILED\r\n    }\r\n}\r\n\r\nexport const initIngredients = () =>\r\n{\r\n    return dispatch => {\r\n         axios.get('https://react-myapp-burger-9ed67.firebaseio.com/ingredients.json')\r\n         .then(response => {\r\n                dispatch(setIngredients(response.data))\r\n         })\r\n         .catch(error =>{\r\n            dispatch(fetchIngredientsfailed())\r\n         })\r\n    }\r\n} ","import * as actionTypes from './actionTypes'\r\nimport axios from '../../axios-orders'\r\n\r\nexport const purchaseBurgerSuccess = (id,orderData) =>\r\n{\r\n\r\n    return{\r\n        type:actionTypes.PURCHASE_BURGER_SUCCESS,\r\n        orderId:id,\r\n        orderData:orderData\r\n    }\r\n}\r\n\r\n\r\nexport const purchaseBurgerFail = (error) =>\r\n{\r\n\r\n    return{\r\n        type:actionTypes.PURCHASE_BURGER_FAIL,\r\n        error:error\r\n    }\r\n}\r\n\r\nexport const purchaseBurgerstart = () =>{\r\n    return {\r\n        type:actionTypes.PURCHASE_BURGER_START\r\n\r\n    }\r\n}\r\n\r\nexport const  purchaseBurger = (orderData,token) => {\r\n    return dispatch => {\r\n        dispatch(purchaseBurgerstart())\r\n        axios.post('/orders.json?auth='+ token,orderData)\r\n        .then(response =>{\r\n            console.log(response.data)\r\n            dispatch(purchaseBurgerSuccess(response.data.name,orderData))\r\n        })\r\n        .catch(error =>{\r\n           dispatch(purchaseBurgerFail(error))\r\n            \r\n        })\r\n    }\r\n}\r\n\r\nexport const purchaseInit = () =>{\r\n    return {\r\n        type:actionTypes.PURCHASE_INIT\r\n    }\r\n}\r\n\r\nexport const fetchOrdersSuccess = (orders) => {\r\n    return {\r\n        type:actionTypes.FETCH_BURGER_SUCCESS,\r\n        orders:orders\r\n    }\r\n}\r\n\r\nexport const fetchOrdersFail = (error) => {\r\n    return {\r\n        type:actionTypes.FETCH_BURGER_SUCCESS,\r\n        error:error\r\n    }\r\n}\r\n\r\nexport const fetchOrdersStart = () =>{\r\n    return { \r\n        type:actionTypes.FETCH_BURGER_START\r\n    }\r\n}\r\n\r\n\r\nexport const fetchBurger = (token,userId) =>{\r\n    return dispatch =>{\r\n        dispatch(fetchOrdersStart())\r\n        const queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId +'\"'\r\n        // axios.get('./orders.json?auth=' + token)\r\n        axios.get('./orders.json' + queryParams)\r\n        .then(res => {\r\n            // console.log(res.data)\r\n            const fetchOrders = []\r\n            for (let key in res.data)\r\n            {\r\n                fetchOrders.push({\r\n                    ...res.data[key],\r\n                    id:key\r\n                })\r\n                // console.log(res.data[key],key)\r\n            }\r\n            dispatch(fetchOrdersSuccess(fetchOrders))\r\n        })\r\n        .catch(err =>{\r\n            dispatch(fetchOrdersFail(err))\r\n        })\r\n\r\n    }\r\n}","import React from 'react'\r\nimport Burger from '../../Burger/Burger'\r\nimport Button from '../../UI/Button/Button'\r\nimport classes from './CheckoutSummary.module.css'\r\nconst CheckoutSummary = (props) =>\r\n{\r\n    \r\n\r\n    return(\r\n        <div className={classes.CheckoutSummary}>\r\n            <h1>We hope it taste well !!</h1>\r\n            <div style={{width:\"100%\" , margin:\"auto\"}}>\r\n                <Burger ingredients={props.ingredients}/>\r\n\r\n            </div>\r\n\r\n            <Button btntype=\"Danger\" clicked={props.checkoutCanceledhandler}>CANCEL</Button>\r\n            <Button btntype=\"Success\" clicked={props.checkoutContinuehandler}>CONTINUE</Button>\r\n        </div>\r\n    )\r\n}\r\nexport  default CheckoutSummary;","import React from 'react'\r\nimport classes from './Input.module.css'\r\n\r\nconst Input = (props) =>\r\n{\r\n    let inputElem = null\r\n    let InputElement = [classes.InputElement];\r\n    // InputElement.push(classes.InputElement)\r\n\r\n    if(props.invalid && props.validation && props.touched)\r\n    {\r\n        InputElement.push(classes.Invalid)\r\n    }\r\n    let validationError = null;\r\n    if (props.invalid && props.touched) {\r\n    validationError = <p style={{\r\n        color:'red'\r\n        // margin:\"0px 6px\"\r\n        // margin-left:'0px'\r\n\r\n    }}>Please enter a valid value!</p>;\r\n    }\r\n    switch(props.elementtype)\r\n    {\r\n        case('input'):\r\n        inputElem  = <input className={InputElement.join(' ')} \r\n        {...props.elementConfig} value={props.value} onChange={props.changed}/>\r\n        break;\r\n\r\n        case('textarea'):\r\n        inputElem  = <textarea className={InputElement.join(' ')} \r\n        {...props.elementConfig} value={props.value} onChange={props.changed}/>\r\n        break;\r\n\r\n        case('select'):\r\n        \r\n            inputElem  = ( \r\n            <select \r\n            className={InputElement.join(' ')} \r\n            value={props.value} onChange={props.changed}>\r\n            {props.elementConfig.options.map(option => (\r\n                <option key={option.value} value={option.value}>\r\n                    {option.displayvalue}\r\n                </option>\r\n                ))}    \r\n\r\n\r\n            </select>)\r\n\r\n        break;\r\n        default: \r\n        inputElem  = <input className={classes.InputElement} \r\n        {...props.elementConfig}  value={props.value} onChange={props.changed}/>\r\n\r\n\r\n    }\r\n    return(\r\n        <div className={classes.Input}>\r\n            <label className={classes.Label}>{props.label}</label>\r\n            {inputElem}\r\n            {validationError}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input;","import React, { Component } from 'react'\r\nimport Button from '../../../component/UI/Button/Button'\r\nimport classes from './ContactData.module.css'\r\nimport Spinner from '../../../component/UI/Spinner/Spinner'\r\nimport axios from '../../../axios-orders'\r\nimport Input from '../../../component/UI/Input/Input'\r\nimport {connect} from 'react-redux'\r\nimport WithErrorHandler from '../../../hoc/WithErrorHandler/WithErrorHandler'\r\nimport * as action from '../../../store/action/index'\r\n\r\n class ContactData extends Component {\r\n     state = {\r\n        orderForm:\r\n        {\r\n            \r\n                name:{\r\n                    elementtype:\"input\",\r\n                    elementConfig:{\r\n                        type:\"text\",\r\n                        placeholder:\"Your Name\"\r\n                    },\r\n                    value:'',\r\n                    validation:{\r\n                        Required:true\r\n                    },\r\n                    valid:false,\r\n                    touched:false\r\n                },\r\n                Area:{\r\n                    elementtype:\"input\",\r\n                    elementConfig:{\r\n                        type:\"text\",\r\n                        placeholder:\"Your Area\"\r\n                    },\r\n                    value:'',\r\n                    validation:{\r\n                        Required:true\r\n                    },\r\n                    valid:false,\r\n                    touched:false\r\n                },\r\n                Zipcode:{\r\n                    elementtype:\"input\",\r\n                    elementConfig:{\r\n                        type:\"text\",\r\n                        placeholder:\"Your Pincode\"\r\n                    },\r\n                    value:'',\r\n                    validation:{\r\n                        Required:true,\r\n                        minlength:5,\r\n                        maxlength:10,\r\n                        isNumeric:true\r\n\r\n                    },\r\n                    valid:false,\r\n                    touched:false\r\n                },\r\n                Country:{\r\n                    elementtype:\"input\",\r\n                    elementConfig:{\r\n                        type:\"text\",\r\n                        placeholder:\"Your Country\"\r\n                    },\r\n                    value:'',\r\n                    validation:{\r\n                        Required:true\r\n                    },\r\n                    valid:false,\r\n                    touched:false\r\n                },\r\n                email:{\r\n                    elementtype:\"input\",\r\n                    elementConfig:{\r\n                        type:\"email\",\r\n                        placeholder:\"Your E-mail\"\r\n                    },\r\n                    value:'',\r\n                    validation:{\r\n                        Required:true,\r\n                        isEmail:true\r\n                    },\r\n                    valid:false,\r\n                    touched:false\r\n                },\r\n                deliverymethod:{\r\n                    elementtype:\"select\",\r\n                    elementConfig:{\r\n                        options:[\r\n                            {value:'fast',displayvalue:'Fast'},\r\n                            {value:'cheap',displayvalue:'Cheap'}\r\n                        ]\r\n                    },\r\n                    validation:{\r\n                        \r\n                    },\r\n                    value:'Fast',\r\n                    valid:true\r\n\r\n                },\r\n        },\r\n        //  loading:false,\r\n         formIsvalid:false\r\n     }\r\n\r\n     orderHandler  = (e) =>\r\n     {\r\n         e.preventDefault()\r\n        //  console.log(this.props.ingredients)\r\n        \r\n        const formData = {}\r\n        for (let formElementIdnetifier in this.state.orderForm)\r\n        {\r\n            formData[formElementIdnetifier] = this.state.orderForm[formElementIdnetifier].value\r\n        }\r\n\r\n        // console.log(formData)\r\n\r\n\r\n        //  this.setState({loading:true})\r\n        const order = {\r\n            ingredients: this.props.ings,\r\n            price:this.props.price,\r\n            orderData:formData,\r\n            userId:this.props.userId\r\n\r\n            }\r\n        \r\n            this.props.onOrderBurger(order,this.props.token)\r\n        //  axios.post('/orders.json',order)\r\n        //  .then(response =>{\r\n        //      this.setState({loading:false})\r\n        //      this.props.history.push('/') // history is not present here as we use render\r\n        //      // so we can handle it by passing the props or withRouter hoc\r\n        //     //  console.log(response)\r\n        //  })\r\n        //  .catch(error =>{\r\n        //     this.setState({loading:false})\r\n        //     //  console.log(error)\r\n        //  })\r\n\r\n\r\n     }\r\n\r\n     checkValidation = (value,rules) =>\r\n     {\r\n        let isValid = true\r\n\r\n        if(!rules)\r\n        {\r\n            return true\r\n        }\r\n        \r\n        if(rules.Required)\r\n        {\r\n            isValid = value.trim() != '' && isValid;\r\n\r\n        }\r\n\r\n        if(rules.minlength)\r\n        {\r\n            isValid = value.length >= rules.minlength && isValid;\r\n        }\r\n\r\n        if(rules.maxlength)\r\n        {\r\n            isValid = value.length <= rules.maxlength && isValid;\r\n        }\r\n\r\n        if(rules.isEmail) {\r\n            const pattern = /^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+$/\r\n            isValid=pattern.test(value) && isValid\r\n        }\r\n\r\n        if(rules.isNumeric) {\r\n            const pattern = /^\\d+$/\r\n            isValid=pattern.test(value) && isValid\r\n        }\r\n\r\n        return isValid\r\n     }\r\n\r\n     InputChangeHandler(e,Indentifier)\r\n     {\r\n         const updatedOrderForm = {\r\n             ...this.state.orderForm\r\n         }\r\n\r\n         const UpdatdedFormElement = {\r\n            ...updatedOrderForm[Indentifier]\r\n\r\n         }\r\n\r\n         // Note :- there we have first copied the entire state  object in updatedOrderForm\r\n         // but it does not create a deep clone(it just copied the pointer of the other object inside it ) \r\n         // it mutates orginal state hence we have again created a clone for the selected\r\n         // Indentifier so that the value of state are not directly overwritten\r\n\r\n\r\n         UpdatdedFormElement.value = e.target.value\r\n         UpdatdedFormElement.valid = this.checkValidation(UpdatdedFormElement.value,UpdatdedFormElement.validation)\r\n         UpdatdedFormElement.touched = true\r\n         updatedOrderForm[Indentifier] = UpdatdedFormElement\r\n        //  console.log(UpdatdedFormElement)\r\n        let isValid = true\r\n        for(let identifier in updatedOrderForm)\r\n        {\r\n            isValid = updatedOrderForm[identifier].valid && isValid\r\n\r\n            // additonal cond added so that when both are true then only\r\n            // make the value otherwise it creates issue with previous input ele val\r\n\r\n        }\r\n        console.log(isValid)\r\n         this.setState({orderForm:updatedOrderForm,formIsvalid:isValid})\r\n\r\n\r\n     }\r\n\r\n\r\n    render() {\r\n        const formElementArray = [];\r\n        for(let key in this.state.orderForm)\r\n        {\r\n            formElementArray.push({\r\n                id:key,\r\n                Config:this.state.orderForm[key]\r\n            })\r\n        }\r\n        let form = (\r\n                //  console.log(this.props.loading,\"11\")      \r\n            <form>\r\n                {/* <Input inputtype={'input'}  type='text' name='name' placeholder='Your Name'/>\r\n                <Input inputtype={'input'}  type='email' name='email' placeholder='Your Mail'/>\r\n                <Input inputtype={'input'}  type='text' name='street' placeholder='Your Street'/>\r\n                <Input inputtype={'input'}  type='text' name='postalcode' placeholder='Your PostalCode'/>\r\n                <Button btntype='Success' clicked={this.orderHandler}>ORDER</Button> */}\r\n                \r\n                    {formElementArray.map(formElem =>{\r\n                    return <Input key={formElem.id}\r\n                     elementtype={formElem.Config.elementtype}\r\n                     elementConfig={formElem.Config.elementConfig}\r\n                     value={formElem.Config.value} \r\n                     invalid={!formElem.Config.valid}\r\n                     validation={formElem.Config.validation}\r\n                     touched={formElem.Config.touched}\r\n                     changed={(e) => this.InputChangeHandler(e,formElem.id)}/>\r\n                })}\r\n                <Button btntype='Success' disabled={!this.state.formIsvalid} clicked={this.orderHandler}>ORDER</Button>\r\n            </form> \r\n            )\r\n\r\n        if(this.props.loading)\r\n        {\r\n            // console.log(this.props.loading,\"22\") \r\n            form=<Spinner/>\r\n        }\r\n        return (\r\n            \r\n            <div className={classes.ContactData}>\r\n                <h4>Enter your Contact Details</h4>\r\n                {form}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStatetoProps = (state) =>{\r\n    return{\r\n        ings:state.burgerBuilder.ingredients,\r\n        price:state.burgerBuilder.totalPrice,\r\n        loading:state.order.loading,\r\n        token:state.auth.token,\r\n        userId:state.auth.userId\r\n        \r\n    }\r\n}\r\n\r\nconst mapDispatchToprops = (dispatch) => {\r\n    return {\r\n        onOrderBurger : (orderData,token) => dispatch(action.purchaseBurger(orderData,token))\r\n    }\r\n}\r\nexport default connect(mapStatetoProps,mapDispatchToprops)(WithErrorHandler(ContactData,axios));\r\n","import React, { Component } from 'react'\r\nimport CheckoutSummary from '../../component/Order/CheckoutSummary/CheckoutSummary'\r\nimport ContactData from './ContactData/ContactData';\r\nimport {Route,Redirect} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\n// import * as action from '../../store/action/index'\r\n\r\n class Checkout extends Component {\r\n    //  state = {\r\n    //      ingredients:null,\r\n    //      totalPrice:null\r\n    //  }\r\n\r\n\r\n    // componentWillMount() {\r\n    //     // const query = new URLSearchParams(this.props.location.search);\r\n    //     // const ingredients = {};\r\n    //     // let price = 0;\r\n    //      //console.log(query.entries()) it is returning just an iterator so that we can\r\n    //    // iterate over for of loop to get it values\r\n\r\n    //     for (let param of query.entries()) {\r\n    //         // ['salad', '1']\r\n    //         // console.log(param[0])\r\n    //         if(param[0] === 'price')\r\n    //         {\r\n    //             price=param[1];\r\n    //         }\r\n    //         else{\r\n    //         ingredients[param[0]] = +param[1];\r\n    //         }\r\n            \r\n    //     }\r\n    //     // console.log(ingredients)\r\n    //     this.setState({ingredients: ingredients ,totalPrice:price });\r\n    // }\r\n\r\n    //  componentWillMount () {\r\n    //      this.props.onInitpurchase()\r\n    //  }will not be able to update state or props\r\n\r\n     checkoutCanceledhandler = () =>\r\n     {\r\n         this.props.history.goBack();\r\n     }\r\n\r\n     checkoutContinuehandler = () =>\r\n     {\r\n        //  console.log(this.props.match)\r\n         this.props.history.push(this.props.match.url + '/contact-data')\r\n     }\r\n    render() {\r\n        // console.log(this.props.ings)\r\n        let summary = <Redirect to='/' />\r\n        if (this.props.ings)\r\n        { \r\n            const purchasedDirect = this.props.purchased ? <Redirect to='/' /> :null\r\n            summary= \r\n            (<div>\r\n                {purchasedDirect}\r\n            <CheckoutSummary \r\n            ingredients={this.props.ings}\r\n            checkoutCanceledhandler={this.checkoutCanceledhandler}\r\n            checkoutContinuehandler={this.checkoutContinuehandler}\r\n            />\r\n            <Route \r\n            path={this.props.match.url + '/contact-data' } \r\n            component={ContactData} /> \r\n\r\n           \r\n            </div>)\r\n        }\r\n        return (\r\n            <div>\r\n\r\n                {summary}\r\n                {/* <CheckoutSummary \r\n                ingredients={this.props.ings}\r\n                checkoutCanceledhandler={this.checkoutCanceledhandler}\r\n                checkoutContinuehandler={this.checkoutContinuehandler}\r\n                />\r\n                <Route \r\n                path={this.props.match.url + '/contact-data' } \r\n                component={ContactData} />  */}\r\n\r\n               {/* render={(props)=> (<ContactData \r\n                ingredients={this.state.ingredients}\r\n               price={this.state.totalPrice}  */}\r\n            {/* //    {...props} \r\n            // props ar here passed to contactdata in this contactdata\r\n                //we want to use to the history or match property provide as props by the \r\n                //Router and it is not present as this component is render as nested/and \r\n                //used instead of component property */}\r\n               \r\n            \r\n\r\n               \r\n            </div>\r\n        \r\n        )}\r\n        }\r\n    \r\n\r\nconst mapStatetoProps = (state) =>{\r\n    return{\r\n        ings:state.burgerBuilder.ingredients,\r\n        purchased:state.order.purchased\r\n        \r\n    }\r\n}\r\n\r\n\r\n        \r\n    \r\n    \r\n    export default connect(mapStatetoProps)(Checkout);\r\n\r\n\r\n// ------------------------------------------------------------------------\r\n// import React, { Component } from 'react';\r\n// // import CheckoutSummary from '../../component/Order/CheckoutSummary/CheckoutSummary'\r\n// import CheckoutSummary from '../../component/Order/CheckoutSummary/CheckoutSummary';\r\n\r\n// class Checkout extends Component {\r\n//     state = {\r\n//         ingredients: {\r\n//             salad: 1,\r\n//             meat: 1,\r\n//             cheese: 1,\r\n//             bacon: 1\r\n//         }\r\n//     }\r\n\r\n//     componentDidMount() {\r\n//         const query = new URLSearchParams(this.props.location.search);\r\n//         const ingredients = {};\r\n//         for (let param of query.entries()) {\r\n//             // ['salad', '1']\r\n//             ingredients[param[0]] = +param[1];\r\n//         }\r\n//         this.setState({ingredients: ingredients});\r\n//     }\r\n\r\n//     checkoutCancelledHandler = () => {\r\n//         this.props.history.goBack();\r\n//     }\r\n\r\n//     checkoutContinuedHandler = () => {\r\n//         this.props.history.replace('/checkout/contact-data');\r\n//     }\r\n\r\n//     render() {\r\n//         return (\r\n//             <div>\r\n//                 <CheckoutSummary \r\n//                     ingredients={this.state.ingredients}\r\n//                     checkoutCancelled={this.checkoutCancelledHandler}\r\n//                     checkoutContinued={this.checkoutContinuedHandler}/>\r\n//             </div>\r\n//         );\r\n//     }\r\n// }\r\n\r\n// export default Checkout;\r\n","import React from 'react'\r\nimport classes from './Order.module.css'\r\n\r\nconst Order = (props) =>{\r\n    const ingredients = []\r\n    for(let ingredientsname in props.ingredients)\r\n    {\r\n        ingredients.push({\r\n            Name:ingredientsname,\r\n            Amount:props.ingredients[ingredientsname]})\r\n    }\r\n    const ingredientoutput = ingredients.map(ig =>{\r\n        return <span \r\n        style={{textTransform:'capitalize',\r\n        display:'inline-block',\r\n        margin:'0 8px',\r\n        border:'1px solid #ccc',\r\n        padding:'5px'\r\n    }}\r\n        key={ig.Name}>{ig.Name} {ig.Amount}</span>\r\n    })\r\n    // console.log(props.ingredients)\r\n    // console.log(ingredients)\r\n    return(\r\n    <div className={classes.Order}>\r\n        <p>Ingredients : {ingredientoutput}</p>\r\n        <p>Price : <strong> Rs: {props.price.toFixed(2)}</strong></p>\r\n    </div>\r\n)}\r\n\r\nexport default Order;\r\n","import React, { Component } from 'react'\r\nimport Order from '../../component/Order/Order'\r\nimport axios from '../../axios-orders'\r\nimport WithErrorHandler from'../../hoc/WithErrorHandler/WithErrorHandler'\r\nimport * as action from '../../store/action/index'\r\nimport {connect} from 'react-redux'\r\nimport Spinner from '../../component/UI/Spinner/Spinner'\r\n class Orders extends Component {\r\n\r\n    // state = {\r\n    //     orders: [],\r\n    //     loading:true\r\n    // }\r\n    componentDidMount(){\r\n\r\n        this.props.onFetchOrders(this.props.token,this.props.userId)\r\n        // axios.get('./orders.json')\r\n        // .then(res => {\r\n        //     // console.log(res.data)\r\n        //     const fetchOrders = []\r\n        //     for (let key in res.data)\r\n        //     {\r\n        //         fetchOrders.push({\r\n        //             ...res.data[key],\r\n        //             id:key\r\n        //         })\r\n        //         // console.log(res.data[key],key)\r\n        //     }\r\n        //     this.setState({loading:false, orders:fetchOrders})\r\n        // })\r\n        // .catch(err =>{\r\n        //     this.setState({loading:false})\r\n        // })\r\n\r\n    }\r\n    render() {\r\n        // console.log(this.props.orders)\r\n        // console.log(this.state.orders[0].ingredients)\r\n\r\n        let orders = null\r\n        if(this.props.loading)\r\n        {\r\n\r\n             orders = <Spinner />\r\n        }\r\n\r\n        if(this.props.orders)\r\n        {\r\n            orders = this.props.orders.map(order =>{\r\n                return  <Order \r\n                key={order.id} \r\n                ingredients={order.ingredients}\r\n                price={+order.price}\r\n                />\r\n             })\r\n        }\r\n        return (\r\n            <div>\r\n            {orders}\r\n            </div>\r\n        )\r\n            \r\n        \r\n    }\r\n}\r\n\r\nconst mapStatetoProps = state =>{\r\n    return {\r\n        orders:state.order.order,\r\n        loading:state.order.loading,\r\n        token:state.auth.token,\r\n        userId:state.auth.userId\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchOrders : (token,userId) => dispatch(action.fetchBurger(token,userId))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStatetoProps,mapDispatchToProps)(WithErrorHandler(Orders,axios))\r\n","import React, { Component } from 'react'\r\nimport Input from '../../component/UI/Input/Input'\r\nimport Button from '../../component/UI/Button/Button'\r\nimport classes from './Auth.module.css'\r\nimport Spinner from '../../component/UI/Spinner/Spinner'\r\nimport {connect} from 'react-redux'\r\nimport * as action from '../../store/action/index'\r\nimport { Redirect } from 'react-router'\r\n\r\nclass Auth extends Component {\r\n    state = {\r\n        controls:{\r\n            email:{\r\n                elementtype:\"input\",\r\n                elementConfig:{\r\n                    type:\"email\",\r\n                    placeholder:\"Your Email Address\"\r\n                },\r\n                value:'',\r\n                validation:{\r\n                    Required:true,\r\n                    isEmail:true\r\n                },\r\n                valid:false,\r\n                touched:false\r\n            },\r\n            password:{\r\n                elementtype:\"input\",\r\n                elementConfig:{\r\n                    type:\"password\",\r\n                    placeholder:\"Password\"\r\n                },\r\n                value:'',\r\n                validation:{\r\n                    Required:true,\r\n                    minlength:7\r\n                },\r\n                valid:false,\r\n                touched:false\r\n            },\r\n            \r\n        },\r\n        isSigup:true\r\n    }\r\n\r\n\r\n    checkValidation = (value,rules) =>\r\n     {\r\n        let isValid = true\r\n\r\n        if(!rules)\r\n        {\r\n            return true\r\n        }\r\n        \r\n        if(rules.Required)\r\n        {\r\n            isValid = value.trim() !== '' && isValid;\r\n\r\n        }\r\n\r\n        if(rules.minlength)\r\n        {\r\n            isValid = value.length >= rules.minlength && isValid;\r\n        }\r\n\r\n        if(rules.maxlength)\r\n        {\r\n            isValid = value.length <= rules.maxlength && isValid;\r\n        }\r\n\r\n        if(rules.isEmail) {\r\n            const pattern = /^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+$/\r\n            isValid=pattern.test(value) && isValid\r\n        }\r\n\r\n        if(rules.isNumeric) {\r\n            const pattern = /^\\d+$/\r\n            isValid=pattern.test(value) && isValid\r\n        }\r\n        return isValid\r\n     }\r\n\r\n     InputChangeHandler = (event,controlName) =>{\r\n         const  updatedControls ={\r\n            ...this.state.controls,\r\n            [controlName]:{\r\n                ...this.state.controls[controlName],\r\n                value:event.target.value,\r\n                valid:this.checkValidation(event.target.value,this.state.controls[controlName].validation),\r\n                touched:true\r\n            }\r\n         }\r\n         this.setState({controls:updatedControls})\r\n     }\r\n\r\n     submitHandler = (event) =>{\r\n        event.preventDefault();\r\n        // console.log(\"Submittimg the form\")\r\n         \r\n\r\n        this.props.Auth(this.state.controls.email.value,this.state.controls.password.value,this.state.isSigup)\r\n    }\r\n\r\n    switchAuthModeHandler = () =>{\r\n        this.setState(prevState =>{\r\n            return {isSigup:!prevState.isSigup}\r\n        })\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(!this.props.buildingBurger  && this.props.authRedirectPath != '/')\r\n        {\r\n            this.props.onSetAuthRedirectPath()\r\n        }\r\n    }\r\n    render() {\r\n        // console.log(\"Auth Component\")\r\n        const formElementArray = [];\r\n        for(let key in this.state.controls)\r\n        {\r\n            formElementArray.push({\r\n                id:key,\r\n                Config:this.state.controls[key]\r\n            })\r\n        }\r\n\r\n        let  form = (\r\n             \r\n        <form>\r\n                       \r\n                {formElementArray.map(formElem =>{\r\n                return <Input key={formElem.id}\r\n                 elementtype={formElem.Config.elementtype}\r\n                 elementConfig={formElem.Config.elementConfig}\r\n                 value={formElem.Config.value} \r\n                 invalid={!formElem.Config.valid}\r\n                 validation={formElem.Config.validation}\r\n                 touched={formElem.Config.touched}\r\n                 changed={(e) => this.InputChangeHandler(e,formElem.id)}/>\r\n            })}\r\n            \r\n            </form> \r\n            )\r\n            \r\n            if(this.props.loading)\r\n            {\r\n                form = <Spinner/>\r\n            }\r\n\r\n            let errorMessage = null \r\n            if (this.props.error) \r\n            {\r\n                errorMessage = (\r\n                    <p>{this.props.error.message}</p>\r\n                )\r\n            }\r\n\r\n            let authenticatedRedirect =  null\r\n            if(this.props.auth)\r\n            {\r\n                authenticatedRedirect = <Redirect to={this.props.authRedirectPath} />\r\n            }\r\n        return (\r\n            <div className={classes.Auth}>\r\n                    {authenticatedRedirect}\r\n                    {errorMessage}\r\n                    <form onSubmit={this.submitHandler}>\r\n                    {form}\r\n                    <Button btntype=\"Success\"  > SUBMIT</Button>\r\n                    </form>\r\n                    <Button \r\n                    clicked={this.switchAuthModeHandler}\r\n                    btntype=\"Danger\" >\r\n                         SWITCH TO {this.state.isSigup ? 'SIGNUP' : 'LOGIN'}\r\n                         </Button>\r\n                \r\n            </div>\r\n        )\r\n    \r\n}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading:state.auth.loading,\r\n        error:state.auth.error,\r\n        auth:state.auth.token != null,\r\n        buildingBurger:state.burgerBuilder.building,\r\n        authRedirectPath:state.auth.authRedirectPath \r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch =>{\r\n    // console.log('dispatching')\r\n    return {\r\n        \r\n        Auth :(email,password,isSignup) => dispatch(action.auth(email,password,isSignup)),\r\n        onSetAuthRedirectPath:() => dispatch(action.setAuthRedirectPath('/'))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Auth)\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport { Redirect } from 'react-router'\r\nimport * as action from '../../../store/action/index'\r\nclass Logout extends Component {\r\n    componentDidMount(){\r\n        this.props.onLogout()\r\n    }\r\n    render() {\r\n        \r\n        return (\r\n            \r\n                // <Redirect to='/auth' />\r\n                <Redirect to='/' />\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        onLogout : () => dispatch(action.logout())\r\n    }\r\n}\r\n\r\nexport default (connect(null,mapDispatchToProps))(Logout)\r\n","import React, { Component } from 'react'\r\nimport Layout from  './hoc/Layout/Layout'\r\nimport BurgerBuilder from './container/BurgerBuilder/BurgerBuilder'\r\nimport Checkout from './container/Checkout/Checkout'\r\n// import ContactData from './container/Checkout/ContactData/ContactData'\r\nimport Orders from './container/Orders/Orders'\r\nimport {Redirect, Route, Switch,withRouter} from 'react-router-dom'\r\nimport Auth from './container/Auth/Auth'\r\nimport Logout from './container/Auth/Logout/Logout'\r\nimport {connect} from 'react-redux'\r\nimport * as action from './store/action/index'\r\n class App extends Component {\r\n\r\n    componentDidMount(){\r\n        this.props.onTryAutoSignup()\r\n    }\r\n\r\n    render() {\r\n        let routes = (\r\n            <Switch>\r\n                <Route path='/Auth'   component={Auth}/>\r\n                <Route path='/' exact component={BurgerBuilder} /> \r\n                <Redirect to='/' />\r\n            </Switch>  \r\n        )\r\n\r\n        if(this.props.isAuth)\r\n        {\r\n            routes = (\r\n                <Switch>\r\n                 <Route path='/checkout'   component={Checkout}  />\r\n                 {/* <Route path='/contact-data'   component={ContactData}/> */}\r\n                 <Route path='/orders' component={Orders}/>\r\n                 <Route path='/Logout' component={Logout}/>\r\n                 <Route path='/Auth'   component={Auth}/>\r\n                 <Route path='/' exact component={BurgerBuilder} />\r\n                 <Redirect to='/' />\r\n                 </Switch>\r\n            )\r\n            }    \r\n        \r\n        return (\r\n            <div>\r\n               <Layout>\r\n                   {routes}\r\n\r\n                  \r\n\r\n                  \r\n                   \r\n                 \r\n               </Layout> \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStatetoProps = state =>{\r\n    return {\r\n        isAuth:state.auth.token != null\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch =>{\r\n    return{\r\n        onTryAutoSignup: () => dispatch(action.authCheckState())\r\n    }\r\n}\r\nexport default withRouter(connect(mapStatetoProps,mapDispatchToProps)(App));","export const updateObject =(oldObject,updatedProperties) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n\r\n    }\r\n}","import * as actionType from '../action/actionTypes';\r\nimport {updateObject} from '../../shared/utility'\r\n\r\nlet  intialstate = {\r\n    ingredients:null,\r\n    totalPrice:50,\r\n    error:false,\r\n    building:false\r\n}\r\nconst INGREDIENT_PRICES = {\r\n  salad:10.2,\r\n  bacon:20.0,\r\n  meat:30.3,\r\n  cheese:35\r\n}\r\n\r\nconst addIngredient = (state,action) =>\r\n{\r\n  const updateIngredient = {[action.ingredientname] : state.ingredients[action.ingredientname] + 1}\r\n            const updatedIngredients = updateObject(state.ingredients,updateIngredient)\r\n            const upadatedState = {\r\n              ingredients:updatedIngredients,\r\n              totalPrice:state.totalPrice + INGREDIENT_PRICES[action.ingredientname],\r\n              building:true\r\n            }\r\n            return updateObject(state,upadatedState)\r\n\r\n}\r\nconst removeIngredient = (state,action) =>{\r\n  const updateIng = {[action.ingredientname] : state.ingredients[action.ingredientname] - 1}\r\n  const updatedIngs = updateObject(state.ingredients,updateIng)\r\n  const upadatedSt = {\r\n    ingredients:updatedIngs,\r\n    totalPrice:state.totalPrice + INGREDIENT_PRICES[action.ingredientname],\r\n    building:true\r\n\r\n  }\r\n  return updateObject(state,upadatedSt)   \r\n}\r\nconst setIngredient = (state,action) => {\r\n  return updateObject(state,{ingredients:{\r\n    salad:action.ingredients.salad,\r\n    bacon:action.ingredients.bacon,\r\n    cheese:action.ingredients.cheese,\r\n    meat:action.ingredients.meat\r\n  },\r\n  totalPrice:50,\r\n  error:false,\r\n  building:false\r\n})\r\n}\r\n\r\nconst fetchIngredient = (state,action) =>{\r\n  return updateObject(state,{error:true}) \r\n}\r\n\r\n\r\nconst reducer = (state = intialstate, action) =>{\r\n\r\n        switch(action.type)\r\n        {\r\n          case actionType.ADD_INGREDIENT:return addIngredient(state,action)\r\n            \r\n          // return{\r\n          //         ...state,\r\n          //         ingredients:{\r\n          //             ...state.ingredients,\r\n          //            [action.ingredientname] : state.ingredients[action.ingredientname] + 1\r\n          //         },\r\n\r\n          //         totalPrice:state.totalPrice + INGREDIENT_PRICES[action.ingredientname]\r\n\r\n          //       }\r\n          case actionType.REMOVE_INGREDIENT:return removeIngredient(state,action)\r\n            \r\n          \r\n          \r\n          // return{\r\n              //   ...state,\r\n              //   ingredients:{\r\n              //       ...state.ingredients,\r\n              //      [action.ingredientname] : state.ingredients[action.ingredientname] - 1\r\n        \r\n              //           },\r\n              //           totalPrice:state.totalPrice - INGREDIENT_PRICES[action.ingredientname]    \r\n\r\n              //         }\r\n           case actionType.SET_INGREDIENT:return setIngredient(state,action)\r\n\r\n\r\n\r\n            //  return{\r\n            //      ...state,\r\n            //      // for the sequence of the order below is done\r\n            //      ingredients:{\r\n            //        salad:action.ingredients.salad,\r\n            //        bacon:action.ingredients.bacon,\r\n            //        cheese:action.ingredients.cheese,\r\n            //        meat:action.ingredients.meat\r\n            //      },\r\n            //      totalPrice:50,\r\n            //      error:false\r\n            //    }\r\n            //  }\r\n\r\n            case actionType.FETCH_INGRDIENTS_FAILED:return fetchIngredient(state,action)\r\n                       \r\n              // return{\r\n              //     ...state,\r\n              //      error:true\r\n              //   }\r\n               \r\n                      \r\n           default:return state\r\n           }        \r\n          }\r\n        \r\n\r\nexport default reducer","import * as actionTypes from '../action/actionTypes'\r\nimport {updateObject} from '../../shared/utility'\r\n\r\nconst initalstate = {\r\n    order:[],\r\n    loading:false,\r\n    purchased:false\r\n}\r\n\r\nconst purchaseInit = (state,action) =>{\r\n    return   updateObject(state,{purchased:false})\r\n}\r\n\r\nconst purchaseBurgerStart = (state,action) => {\r\n    return updateObject(state,{ loading:true})\r\n}\r\n\r\n// const purchaseBurgerSuccess = (state,action) =>\r\n// {\r\n//     const newOrder = updateObject(action.orderData,{ id:action.orderId})\r\n//                 //    const  newOrder = {\r\n//                 //         ...action.orderData,\r\n//                 //         id:action.orderId,\r\n                        \r\n//                 //     }\r\n\r\n//                     return updateObject(state,{                 \r\n//                         loading:false,\r\n//                         purchased:true,\r\n//                         order:state.order.concat(newOrder) })\r\n// }\r\nconst purchaseBurgerFail = (state,action) => \r\n{\r\n    return updateObject(state,{loading:false})\r\n}\r\n\r\nconst fetchBurgerStart = (state,action) =>{\r\n\r\n    return updateObject(state,{loading:true})\r\n} \r\nconst fetchBurgerSuccess = (state,action) =>{\r\n    return updateObject(state,{ \r\n        order:action.orders,\r\n        loading:false})\r\n} \r\nconst fetchBurgerFail = (state,action) =>{\r\n    return updateObject(state,{loading:false})\r\n}\r\nconst reducer = (state = initalstate,action) =>{\r\n        switch(action.type)\r\n        {\r\n            case actionTypes.PURCHASE_INIT:return purchaseInit(state,action)\r\n\r\n            \r\n                // return{\r\n                //     ...state,\r\n                //     purchased:false\r\n                // }\r\n            case actionTypes.PURCHASE_BURGER_START:purchaseBurgerStart(state,action)\r\n               \r\n                // return{\r\n                //     ...state,\r\n                //     loading:true\r\n                // }\r\n            \r\n            case actionTypes.PURCHASE_BURGER_SUCCESS:\r\n                // return purchaseBurgerSuccess(state,action)\r\n                {\r\n\r\n                   \r\n                   const  newOrder = {\r\n                        ...action.orderData,\r\n                        id:action.orderId,\r\n                        \r\n                    }\r\n\r\n             \r\n                    return{\r\n                        ...state,\r\n                        loading:false,\r\n                        purchased:true,\r\n                        order:state.order.concat(newOrder)                \r\n                    }\r\n                }\r\n            case actionTypes.PURCHASE_BURGER_FAIL:return purchaseBurgerFail(state,action)\r\n                                    \r\n                    // return {\r\n                    //     ...state,\r\n                    //     loading:false\r\n                    // }\r\n                \r\n\r\n            case actionTypes.FETCH_BURGER_START:return fetchBurgerStart(state,action)\r\n                \r\n                    \r\n                    // return{\r\n                    //     ...state,\r\n                    //     loading:true\r\n                    // }\r\n                \r\n            case actionTypes.FETCH_BURGER_SUCCESS:return fetchBurgerSuccess(state,action)\r\n                    \r\n                        \r\n                        // return{\r\n                        //     ...state,\r\n                        //     order:action.orders,\r\n                        //     loading:false\r\n                        // }\r\n                    \r\n            case actionTypes.FETCH_BURGER_START:return fetchBurgerFail(state,action)\r\n                        \r\n                            \r\n                            // return{\r\n                            //     ...state,\r\n                            //     loading:false\r\n                            // }\r\n                                  \r\n            default:return state        \r\n        }\r\n}\r\n\r\nexport default reducer ","import * as actionTypes from '../action/actionTypes'\r\nimport {updateObject} from '../../shared/utility'\r\n\r\nconst initialState = {\r\n    token:null,\r\n    userId:null,\r\n    error:null,\r\n    loading:false,\r\n    authRedirectPath:'/'\r\n\r\n}\r\n\r\nconst authStart = (state,action) => {\r\n    return updateObject(state,{loading:true,error:null})\r\n}\r\n\r\nconst authSuccess = (state,action) => {\r\n    return updateObject(state,{\r\n        loading:false,\r\n        token:action.idToken,\r\n        userId:action.userId,\r\n        error:null})\r\n}\r\n\r\nconst authFail = (state,action) => {\r\n    return updateObject(state,{loading:false,error:action.error})\r\n}\r\n\r\n\r\nconst authLogout = (state,action) =>{\r\n    return updateObject(state,{token:null,userId:null})\r\n}\r\n\r\nconst setAuthRedirectPath = (state,action) =>{\r\n    return updateObject(state,{authRedirectPath:action.path})\r\n}\r\nconst reducer = (state=initialState,action) =>\r\n{\r\n    switch(action.type) \r\n    {\r\n        case actionTypes.AUTH_START:return authStart(state,action)\r\n        case actionTypes.AUTH_SUCCESS:return authSuccess(state,action)\r\n        case actionTypes.AUTH_FAIL: return authFail(state,action)\r\n        case actionTypes.AUTH_LOGOUT: return authLogout(state,action)\r\n        case actionTypes.SET_AUTH_REDIRECT_PATH:return setAuthRedirectPath(state,action)\r\n\r\n        default:return state\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default reducer\r\n"," import React from 'react'\r\n import ReactDOM from 'react-dom'\r\n import   './index.css'\r\n import App from './App'\r\n import {Provider} from 'react-redux'\r\n import {createStore,applyMiddleware,compose,combineReducers} from 'redux'\r\n import burgerBuilderreducer from './store/reducer/burgerBuilderReducer'\r\n import orderReducer from './store/reducer/orderReducer'\r\n import authReducer from './store/reducer/Auth'\r\n import { BrowserRouter } from 'react-router-dom'\r\n import thunk from 'redux-thunk'\r\n \r\n const composeEnhancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose\r\n \r\n const rootReducer = combineReducers({\r\n     burgerBuilder:burgerBuilderreducer,\r\n     order:orderReducer,\r\n     auth:authReducer\r\n })\r\n const store = createStore(rootReducer,composeEnhancers(\r\n     applyMiddleware(thunk)\r\n ))\r\n\r\nconst app = (\r\n    <Provider store={store}>\r\n    <BrowserRouter>\r\n    <App/>\r\n    </BrowserRouter>\r\n    </Provider>\r\n)\r\n ReactDOM.render(app , document.getElementById(\"root\"))\r\n\r\n// -------------------------------------------------------------------------\r\n// Above is for ur Project\r\n\r\n//-------------------------------------------------------------------------\r\n\r\n// import React from 'react';\r\n// import ReactDOM from 'react-dom';\r\n// import './index.css';\r\n// import App from './Exercise2Ajax/App'\r\n// import axios from 'axios'\r\n// // import registerServiceWorker from './registerServiceWorker';\r\n\r\n// axios.defaults.baseURL = 'https://jsonplaceholder.typicode.com';\r\n// axios.defaults.headers.common['Authorization'] = 'SHUB - TOKEN';\r\n// axios.defaults.headers.post['Content-Type']  = 'Application/json'\r\n// axios.interceptors.request.use(request =>\r\n//     {\r\n//         // console.log(request)\r\n//         return request\r\n//     },error =>{\r\n//         // console.log(error)\r\n//         return Promise.reject(error)\r\n//     });\r\n\r\n//     axios.interceptors.response.use(response =>\r\n//         {\r\n//             // console.log(response)\r\n//             return response\r\n//         },error =>{\r\n//             // console.log(error)\r\n//             return Promise.reject(error)\r\n//         });\r\n        \r\n// ReactDOM.render( <App />, document.getElementById( 'root' ) );\r\n// // registerServiceWorker();\r\n\r\n// --------------------------------------------------------------------------\r\n// // Redux Project\r\n\r\n// import React from 'react'\r\n// import ReactDOM from 'react-dom'\r\n// import   './index.css'\r\n// import App from './Exercise_Redux/App'\r\n// import {createStore,combineReducers,applyMiddleware} from 'redux'\r\n// import counterReducer from './Exercise_Redux/store/reducers/counter'\r\n// import resultReducer from './Exercise_Redux/store/reducers/result'\r\n// import {Provider} from 'react-redux'\r\n// import thunk from 'redux-thunk'\r\n\r\n// // const app = (\r\n// //    <BrowserRouter>\r\n// //    <App/>\r\n// //    </BrowserRouter>\r\n// // )\r\n \r\n// const rootReducers = combineReducers({\r\n//     ctr:counterReducer,\r\n//     res:resultReducer\r\n// })\r\n\r\n// const logger = store =>\r\n// {\r\n//     return next =>{\r\n//         return action => {\r\n//             console.log('[Middleware] Dispatching', action)\r\n//             const result = next(action)\r\n//             console.log('[Middleware ] next state' ,store.getState())\r\n//             return result\r\n\r\n//         }\r\n//     }\r\n// }\r\n// const store = createStore(rootReducers,applyMiddleware(logger,thunk));\r\n\r\n// ReactDOM.render(<Provider store={store}><App/></Provider> , document.getElementById(\"root\"))\r\n \r\n \r\n//____________________________________________________________________________\r\n\r\n// Redux Assignmmnet_02\r\n\r\n\r\n// import React from 'react'\r\n// import ReactDOM from 'react-dom'\r\n// import   './index.css'\r\n// import App from './Assignment_Redux/App'\r\n// import {createStore,combineReducers} from 'redux'\r\n\r\n// import {Provider} from 'react-redux'\r\n\r\n// const app = (\r\n//    <BrowserRouter>\r\n//    <App/>\r\n//    </BrowserRouter>\r\n// )\r\n \r\n// const rootReducers = combineReducers({\r\n//     ctr:counterReducer,\r\n//     res:resultReducer\r\n// })\r\n// const store = createStore(rootReducers);\r\n\r\n// ReactDOM.render(<Provider store={store}><App/></Provider> , document.getElementById(\"root\"))\r\n// ReactDOM.render(<App/>, document.getElementById(\"root\"))\r\n \r\n"],"sourceRoot":""}